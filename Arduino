
#include "HX711.h" //This library can be obtained here http://librarymanager/All#Avia_HX711

#define calibration_factor -729.64 //This value is obtained using the SparkFun_HX711_Calibration sketch #understand this
#define zero_factor -1987 //This large value is obtained using the SparkFun_HX711_Calibration sketch  #understand this 

#define LOADCELL_DOUT_PIN  13
#define LOADCELL_SCK_PIN  2


#define calibration_factor_fyl -438.55 //This value is obtained using the SparkFun_HX711_Calibration sketch #understand this
#define zero_factor_fyl 11654 //This large value is obtained using the SparkFun_HX711_Calibration sketch  #understand this 

#define LOADCELL_DOUT_PIN_fyl  3
#define LOADCELL_SCK_PIN_fyl  4


#define calibration_factor_fzl -56.74 //This value is obtained using the SparkFun_HX711_Calibration sketch #understand this
#define zero_factor_fzl 2400 //This large value is obtained using the SparkFun_HX711_Calibration sketch  #understand this 

#define LOADCELL_DOUT_PIN_fzl  5
#define LOADCELL_SCK_PIN_fzl  6


#define calibration_factor_fxr -460.22 //This value is obtained using the SparkFun_HX711_Calibration sketch #understand this
#define zero_factor_fxr 1280 //This large value is obtained using the SparkFun_HX711_Calibration sketch  #understand this 

#define LOADCELL_DOUT_PIN_fxr  7
#define LOADCELL_SCK_PIN_fxr  8

#define calibration_factor_fyr -583.71 //This value is obtained using the SparkFun_HX711_Calibration sketch #understand this
#define zero_factor_fyr -2373 //This large value is obtained using the SparkFun_HX711_Calibration sketch  #understand this 

#define LOADCELL_DOUT_PIN_fyr  9
#define LOADCELL_SCK_PIN_fyr  10


#define calibration_factor_fzr -56.74 //This value is obtained using the SparkFun_HX711_Calibration sketch #understand this
#define zero_factor_fzr -11500 //This large value is obtained using the SparkFun_HX711_Calibration sketch  #understand this 

#define LOADCELL_DOUT_PIN_fzr  11
#define LOADCELL_SCK_PIN_fzr  12


HX711 scale1;
HX711 scale2;
HX711 scale3;
HX711 scale4;
HX711 scale5;
HX711 scale6;

void setup() {
  Serial.begin(9600);
  //Serial.println("Demo of zeroing out a scale from a known value");

  scale1.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN);
  scale1.set_scale(calibration_factor); //This value is obtained by using the SparkFun_HX711_Calibration sketch
  scale1.set_offset(zero_factor); //Zero out the scale using a previously known zero_factor

  scale2.begin(LOADCELL_DOUT_PIN_fyl, LOADCELL_SCK_PIN_fyl);
  scale2.set_scale(calibration_factor_fyl); //This value is obtained by using the SparkFun_HX711_Calibration sketch
  scale2.set_offset(zero_factor_fyl); //Zero out the scale using a previously known zero_factor

   scale3.begin(LOADCELL_DOUT_PIN_fzl, LOADCELL_SCK_PIN_fzl);
  scale3.set_scale(calibration_factor_fzl); //This value is obtained by using the SparkFun_HX711_Calibration sketch
  scale3.set_offset(zero_factor_fzl); //Zero out the scale using a previously known zero_factor

   scale4.begin(LOADCELL_DOUT_PIN_fxr, LOADCELL_SCK_PIN_fxr);
  scale4.set_scale(calibration_factor_fxr); //This value is obtained by using the SparkFun_HX711_Calibration sketch
  scale4.set_offset(zero_factor_fxr); //Zero out the scale using a previously known zero_factor

   scale5.begin(LOADCELL_DOUT_PIN_fyr, LOADCELL_SCK_PIN_fyr);
  scale5.set_scale(calibration_factor_fyr); //This value is obtained by using the SparkFun_HX711_Calibration sketch
  scale5.set_offset(zero_factor_fyr); //Zero out the scale using a previously known zero_factor

   scale6.begin(LOADCELL_DOUT_PIN_fzr, LOADCELL_SCK_PIN_fzr);
  scale6.set_scale(calibration_factor_fzr); //This value is obtained by using the SparkFun_HX711_Calibration sketch
  scale6.set_offset(zero_factor_fzr); //Zero out the scale using a previously known zero_factor
 // Serial.println("Readings:");
}

void loop() {
  float weights[] = {
    scale2.get_units(),
    scale1.get_units(),
    scale3.get_units(),
    scale4.get_units(),
    scale5.get_units(),
    scale6.get_units()
  };
  
 for (int i = 0; i<6; i++){
  Serial.print(weights[i]);
  if(i<5){
    Serial.print(',');
  }
 }    
 Serial.println();
  delay(100); // Adjust the delay time as needed
}
